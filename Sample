
import Foundation

struct Attribute: Codable {
    var plot_data_id: String?
    var attribute_id: String
    var attribute_unit1_id: String?
    var attribute_unit2_id: String?
    var quantity: String?
}

struct Plant: Codable {
    var id: String?
    var plant_no: Int
    var branch: Int
    var branch_type: Int
    var p1_value: Int
    var p2_value: Int
    var p3_value: Int
}

struct PlotInfo: Codable {
    var plot_id: String
    var sub_plot: String
    var attributes: [Attribute]
    var plants: [Plant]
}

struct CollectData: Codable {
    var sampling_date: String
    var sub_sample_count: String
    var plot_info: [PlotInfo]
}

struct Data: Codable {
    var template_id: String
    var collect_data: [CollectData]
}

struct FieldData: Codable {
    var field_id: String
    var data: [Data]
}

func convertCoreDataModelToJSON(coreData: [String: Any]) -> String? {
    let field_id = String(coreData["fieldId"] as? Int ?? 0)
    let template_id = String(coreData["templateId"] as? Int ?? 0)
    let date = coreData["date"] as? String ?? ""
    let plot_id = String(coreData["plotId"] as? Int ?? 0)
    let branch = coreData["branch"] as? Int ?? 0
    let value = coreData["value"] as? Int ?? 0
    
    let attributes = [
        Attribute(plot_data_id: nil, attribute_id: "72", attribute_unit1_id: nil, attribute_unit2_id: nil, quantity: nil),
        Attribute(plot_data_id: nil, attribute_id: "73", attribute_unit1_id: nil, attribute_unit2_id: nil, quantity: nil),
        Attribute(plot_data_id: nil, attribute_id: "74", attribute_unit1_id: nil, attribute_unit2_id: nil, quantity: nil),
        Attribute(plot_data_id: nil, attribute_id: "75", attribute_unit1_id: nil, attribute_unit2_id: nil, quantity: nil)
    ]
    
    let plants = [
        Plant(id: nil, plant_no: 1, branch: branch, branch_type: 1, p1_value: 0, p2_value: value, p3_value: 0)
    ]
    
    let plotInfo = PlotInfo(plot_id: plot_id, sub_plot: "", attributes: attributes, plants: plants)
    let collectData = CollectData(sampling_date: date, sub_sample_count: "", plot_info: [plotInfo])
    let data = Data(template_id: template_id, collect_data: [collectData])
    
    let fieldData = FieldData(field_id: field_id, data: [data])
    
    let encoder = JSONEncoder()
    encoder.outputFormatting = .prettyPrinted
    
    if let jsonData = try? encoder.encode(fieldData) {
        return String(data: jsonData, encoding: .utf8)
    }
    
    return nil
}

let coreDataModel: [String: Any] = [
    "attributeId": "Branch",
    "averagebollWeight": nil,
    "averagebollWeightUnit": nil,
    "branch": 20,
    "captureTime": "1718187866.480301",
    "date": "2024-06-12",
    "distanceBetweenRow": nil,
    "distanceBetweenRowUnit": nil,
    "fieldId": 91,
    "numberOfPlants": nil,
    "plant": "Plant 1",
    "plantDistanceRow": nil,
    "plantDistanceRowUnit": nil,
    "plants": nil,
    "plotDataId": "Branch",
    "plotId": 61,
    "templateId": 10,
    "uploadStatus": "0.0",
    "userId": 1,
    "value": 7777
]

if let jsonString = convertCoreDataModelToJSON(coreData: coreDataModel) {
    print(jsonString)
}

To issue subordinate certificates and install them on devices, follow these steps. This includes creating subordinate certificates signed by a root certificate and ensuring they are installed and trusted on iOS/iPadOS devices.

1. Issue a Subordinate Certificate

To issue a subordinate certificate (amce_subca.pem), you need a root certificate and private key (DF-2-1_RootCA.pem and DF-2-1_RootCA.key).

Step 1.1: Generate a Private Key for the Subordinate Certificate

Run the following command to generate a private key for the subordinate CA:

openssl genrsa -out amce_subca.key 4096

Step 1.2: Create a Certificate Signing Request (CSR)

Create a CSR for the subordinate certificate:

openssl req -new -key amce_subca.key -out amce_subca.csr

You’ll be prompted to enter certificate details:
	•	Common Name (CN): Name for the subordinate certificate (e.g., “AMCE Subordinate CA”).
	•	Other fields like country, organization, etc., should align with your organization’s needs.

Step 1.3: Sign the Subordinate Certificate Using the Root CA

Use the root certificate and key to sign the CSR:

openssl x509 -req -in amce_subca.csr -CA DF-2-1_RootCA.pem -CAkey DF-2-1_RootCA.key -CAcreateserial -out amce_subca.pem -days 3650 -sha256 -extfile v3.ext

Here:
	•	-days 3650: The certificate is valid for 10 years (adjust as needed).
	•	-extfile v3.ext: Optional, if you want to specify extensions like basicConstraints=CA:TRUE.

Example v3.ext File:

basicConstraints=CA:TRUE
keyUsage = critical, digitalSignature, keyCertSign, cRLSign
subjectAltName = @alt_names

[alt_names]
DNS.1 = example.com
DNS.2 = *.example.com

After running this command, you’ll have the subordinate certificate (amce_subca.pem).

2. Install Subordinate Certificate on Devices

Step 2.1: Transfer the Certificate to the Device

Transfer the amce_subca.pem certificate to your device using one of these methods:
	•	Email: Attach the certificate to an email and send it to your device.
	•	

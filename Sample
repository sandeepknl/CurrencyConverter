let dataCollectionValue = BiologicalDataCollectionManager().readCaptureDataForSync()
        var field : String?
            var modelArray : [BiologicalCaptureDataModel] = []
        dataCollectionValue.forEach({values in
//            values.uploadStatus = "\(UploadStatus.eUploadPending.rawValue)"
                let dataObject : BiologicalCaptureData = values
                let model = BiologicalCaptureDataModel(coreDataObject: dataObject)
            if modelArray.count == 0{
                modelArray.append(model)
            }
            if model.fieldId == modelArray.last?.fieldId{
                field = model.fieldId
                if dataCollectionValue.count > 1 {
                    modelArray.append(model)
                }
                let fieldData = BiologicalDataCollectionManager().readCaptureDataForSyncRequest(fieldId: model.fieldId)
                
                if modelArray.count == fieldData?.count{
                    let convertedData = convertToDesiredFormat(data: modelArray, field: field ?? "")
                    print(convertedData)
                    DatacollectionWebservice().captureDataSyncRequest(convertedData) { data,error in
                        let decoder = JSONDecoder()
                        if data != nil {
                            do {
                                let model = try decoder.decode(MetaData.self, from: (data!))
                                print(model.message)
                                if model.status{
                                    
                                    let fieldData = DatabaseBiologicalField().readBiologicalFieldData(fieldId: field ?? "", tempId: "")
                                    let date = Date().stringFromDate(format: DateFormatters.YYYYHMMHDDHHHHMMHSS) ?? ""
                                    fieldData?.saveLocalCaptureDate(value: date)
                                    
                                    values.uploadStatus = "\(UploadStatus.eLocalUpload.rawValue)"
                                    NotificationCenter.default.post(name: NSNotification.Name("imageSync"), object: BioSyncedItems.data,userInfo: nil)
                                    
                                    
                                }
                                else{
                                    values.uploadStatus = "\(UploadStatus.eLocal.rawValue)"
                                }
                                
                            }
                            catch {
                                print(error.localizedDescription)
                                
                            }
                        }
                    }
                    
                }
                
            }
            else{
                modelArray.removeAll()
            }
                
            
            
            })

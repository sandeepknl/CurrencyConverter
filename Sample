import CloudKit

func createChannelSubscription() {
    let recordType = "YourRecordType" // Replace with your CloudKit record type
    let database = CKContainer.default().publicCloudDatabase

    // Configure the subscription to monitor updates in your record type
    let subscription = CKQuerySubscription(
        recordType: recordType,
        predicate: NSPredicate(value: true), // Adjust predicate as needed
        options: [.firesOnRecordUpdate] // Triggers on record updates
    )

    // Set up the notification info for background notifications
    let notificationInfo = CKSubscription.NotificationInfo()
    notificationInfo.shouldSendContentAvailable = true // Silent push
    subscription.notificationInfo = notificationInfo

    // Save the subscription in the database
    database.save(subscription) { savedSubscription, error in
        if let error = error {
            print("Error creating channel subscription: \(error.localizedDescription)")
        } else {
            print("Successfully created channel subscription.")
        }
    }
}
